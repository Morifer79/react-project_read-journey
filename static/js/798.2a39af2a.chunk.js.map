{"version":3,"file":"static/js/798.2a39af2a.chunk.js","mappings":"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","sources":["components/Constructor/Container/Container.styled.jsx","components/Constructor/Container/Container.jsx","components/Constructor/Dashboard/Dashboard.styled.jsx","components/Constructor/Dashboard/Dashboard.jsx","components/Constructor/Mainboard/Mainboard.styled.jsx","components/Constructor/Mainboard/Mainboard.jsx","components/PopUp/Notifications/Notifications.styled.jsx","components/PopUp/PopUp.styled.jsx","components/PopUp/PopUp.jsx","components/Recommended/RecommendedDashboard/FilterBlock/FilterBlock.styled.jsx","redux/books/booksSelectors.js","hooks/useBooks.js","components/PopUp/Notifications/EndReading.jsx","components/Reading/ReadingDashboard/AddReading/AddReading.jsx","components/Reading/ReadingDashboard/ProgressBlock/ProgressBlock.styled.jsx","components/Reading/ReadingDashboard/ProgressBlock/ProgressBlock.jsx","components/Reading/ReadingDashboard/Details/DiaryBlock/DiaryBlock.styled.jsx","components/Reading/ReadingDashboard/Details/DiaryBlock/DiaryItem/DiaryItem.styled.jsx","components/Reading/ReadingDashboard/Details/DiaryBlock/DiaryItem/DiaryItem.jsx","components/Reading/ReadingDashboard/Details/DiaryBlock/DiaryBlock.jsx","components/Reading/ReadingDashboard/Details/StatisticsBlock/StatisticsBlock.styled.jsx","components/Reading/ReadingDashboard/Details/StatisticsBlock/StatisticsBlock.jsx","components/Reading/ReadingDashboard/Details/Details.jsx","components/Reading/ReadingDashboard/ReadingDashboard.jsx","components/Reading/ReadingMainboard/ReadingMainboard.styled.jsx","components/Reading/ReadingMainboard/ReadingMainboard.jsx","components/Reading/Reading.jsx","pages/ReadingPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from '../../../styleset/theme';\n\nexport const Wrapper = styled.div`\n  @media screen and (min-width: 1440px) {\n    display: flex;\n    gap: ${theme.spacing(8)};\n  }\n`;\n","import { Wrapper } from \"./Container.styled\";\n\nexport const Container = ({ children }) => {\n  return <Wrapper>{children}</Wrapper>;\n};\n","import styled from 'styled-components';\nimport { theme } from '../../../styleset/theme';\n\nexport const Section = styled.div`\n  margin-block-end: ${theme.spacing(5)};\n  padding: ${theme.spacing(10)};\n  border-radius: ${theme.radii.xl};\n  background: ${theme.colors.primary};\n\n  @media screen and (min-width: 768px) {\n    margin-block-end: ${theme.spacing(8)};\n    padding: ${theme.spacing(16)};\n    display: flex;\n    gap: ${theme.spacing(16)};\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-block-end: ${theme.spacing(0)};\n    inline-size: 353px;\n    flex-direction: column;\n    padding: ${theme.spacing(20)} ${theme.spacing(10)} ${theme.spacing(10)};\n  }\n`;\n","import { Section } from './Dashboard.styled';\n\nexport const Dashboard = ({ children }) => {\n  return <Section>{children}</Section>\n};\n","import styled from 'styled-components';\nimport { theme } from '../../../styleset/theme';\n\nexport const Section = styled.div`\n  padding: ${theme.spacing(20)} ${theme.spacing(10)};\n  inline-size: 100%;\n  border-radius: ${theme.radii.xl};\n  background: ${theme.colors.primary};\n\n  @media screen and (min-width: 768px) {\n    padding: ${theme.spacing(20)};\n  }\n\n  h3 {\n    font-size: 20px;\n    font-weight: 700;\n    line-height: 1;\n\n    @media screen and (min-width: 768px) {\n      font-size: 28px;\n      line-height: 1.142;\n    }\n  }\n`;\n","import { Section } from \"./Mainboard.styled\";\n\nexport const Mainboard = ({ children }) => {\n  return <Section>{children}</Section>\n};\n","import styled from 'styled-components';\nimport { theme } from '../../../styleset/theme';\n\nexport const ModalBody = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding-block: ${theme.spacing(20)};\n  inline-size: 335px;\n\n  @media screen and (min-width: 768px) {\n    padding-block: ${theme.spacing(15)};\n    inline-size: 342px;\n  }\n\n  img {\n    inline-size: 50px;\n    block-size: 50px;\n    margin-block-end: ${theme.spacing(10)};\n    @media screen and (min-width: 768px) {\n      inline-size: 68px;\n      block-size: 70px;\n      margin-block-end: ${theme.spacing(16)};\n    }\n  }\n\n  h4 {\n    font-size: 18px;\n    font-weight: 700;\n    line-height: 1;\n    margin-block-end: ${theme.spacing(5)};\n    @media screen and (min-width: 768px) {\n      font-size: 20px;\n      margin-block-end: ${theme.spacing(7)};\n    }\n  }\n\n  h5 {\n    max-width: 250px;\n    text-align: center;\n    color: ${theme.colors.lightgrey};\n    font-size: 14px;\n    font-weight: 500;\n    line-height: 1.285;\n    margin-block-end: ${theme.spacing(2)};\n    span {\n      color: ${theme.colors.light};\n    }\n  }\n`;\n","import { theme } from '../../styleset/theme';\nimport styled from 'styled-components';\n\nexport const ModalHeader = styled.div`\n  height: auto;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  z-index: 10;\n  padding: 0;\n  border: none;\n  background: transparent;\n\n  & svg {\n    stroke: ${theme.colors.light};\n    transition: border ${theme.transition};\n\n    &:is(:hover, :focus) {\n      border: 1.5px solid ${theme.colors.light};\n      border-radius: ${theme.radii.xxl};\n    }\n  }\n`;\n","import Modal from 'react-modal';\nimport SpriteIcons from '../../images/sprite.svg';\nimport { CloseBtn, ModalHeader } from './PopUp.styled';\nimport { createPortal } from 'react-dom';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    border: '1px solid rgba(104, 104, 104, 0.2)',\n    borderRadius: '12px',\n    zIndex: '1300',\n    overflowY: 'auto',\n    scrollbarColor: '#888 #e0e0e0',\n    scrollbarWidth: 'thin',\n    backgroundColor: '#1F1F1F',\n  },\n  overlay: {\n    backgroundColor: 'rgba(20, 20, 20, .6)',\n    zIndex: '1',\n  },\n};\n\nModal.setAppElement('#modal-root');\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const PopUp = ({ isOpen, onRequestClose, children }) => {\n  return createPortal(\n    <Modal isOpen={isOpen} onRequestClose={onRequestClose} style={customStyles}>\n      <ModalHeader>\n        <CloseBtn onClick={onRequestClose}>\n          <svg width=\"22\" height=\"22\">\n            <use xlinkHref={`${SpriteIcons}#icon-x`} />\n          </svg>\n        </CloseBtn>\n      </ModalHeader>\n      <div>{children}</div>\n    </Modal>,\n    modalRoot\n  );\n};\n","import styled from 'styled-components';\nimport { theme } from '../../../../styleset/theme';\nimport { Field } from 'formik';\n\nexport const Text = styled.h2`\n  font-size: 10px;\n  line-height: 1.2;\n  font-weight: 500;\n  margin-block-end: ${theme.spacing(4)};\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.285;\n  }\n`;\n\nexport const LabelBox = styled.div`\n  position: relative;\n`;\n\nexport const StyledInput = styled(Field)`\n  position: relative;\n  inline-size: 100%;\n  margin-block-end: ${theme.spacing(4)};\n  padding: ${theme.spacing(7)};\n  border-radius: ${theme.radii.m};\n  border: none;\n  outline: none;\n  background-color: ${theme.colors.secondary};\n\n  font-size: 14px;\n  line-height: 1.285;\n  color: ${theme.colors.light};\n\n  &[name='title'] {\n    padding-left: 85px;\n  }\n  &[name='author'] {\n    padding-left: 93px;\n  }\n  &[name='pages'] {\n    padding-left: 135px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-block-end: ${theme.spacing(7)};\n    min-inline-size: 295px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-block-end: ${theme.spacing(4)};\n    min-inline-size: 313px;\n  }\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  div {\n    display: flex;\n    gap: ${theme.spacing(4)};\n  }\n`;\n\nexport const BtnFilter = styled.button`\n  margin-block-start: ${theme.spacing(6)};\n  padding: ${theme.spacing(5)} ${theme.spacing(10)};\n  background-color: transparent;\n  border: 1px solid ${theme.colors.brd};\n  border-radius: ${theme.radii.xl};\n  transition: background-color ${theme.transition}, border ${theme.transition};\n\n  &:is(:hover, :focus) {\n    background-color: ${theme.colors.light};\n    border: 1px solid transparent;\n    span {\n      color: ${theme.colors.primary};\n    }\n  }\n\n  span {\n    color: ${theme.colors.light};\n    font-size: 14px;\n    font-weight: 700;\n    line-height: 1.285;\n    transition: color ${theme.transition};\n    @media screen and (min-width: 768px) {\n      font-size: 16px;\n      line-height: 1.125;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: ${theme.spacing(6)} ${theme.spacing(14)};\n  }\n`;\n","export const selectBooks = state => state.books.books;\nexport const selectCurrentPage = state => state.books.page;\nexport const selectPerPage = state => state.books.perPage;\nexport const selectTotalPage = state => state.books.totalPages;\nexport const selectNewBooks = state => state.books.newBooks;\nexport const selectReadBook = state => state.books.readBook;\nexport const selectOwnBook = state => state.books.ownBook;\nexport const selectIsLoading = state => state.books.isLoading;\n","import { useSelector } from 'react-redux';\nimport {\n  selectBooks,\n  selectTotalPage,\n  selectNewBooks,\n  selectReadBook,\n  selectOwnBook,\n} from '../redux/books/booksSelectors';\n\nexport const useBooks = () => {\n  const books = useSelector(selectBooks);\n  const totalPage = useSelector(selectTotalPage);\n  const newBook = useSelector(selectNewBooks);\n  const readBook = useSelector(selectReadBook);\n  const ownBook = useSelector(selectOwnBook);\n\n  return {\n    books,\n    totalPage,\n    newBook,\n    readBook,\n    ownBook,\n  };\n};\n","import books from '../../../images/books.png';\nimport { ModalBody } from '../Notifications/Notifications.styled';\n\nexport const EndReading = () => {\n  return (\n    <ModalBody>\n      <img src={books} alt=\"finger\" />\n      <h4>The book is read</h4>\n      <h5>\n        It was an <span>exciting journey</span>, where each page revealed new horizons, and\n        the characters became inseparable friends.\n      </h5>\n    </ModalBody>\n  );\n};\n","import {\n  ErrMsg,\n  Label,\n  StyledInput,\n} from 'components/AuthForms/RegisterForm/RegisterForm.styled';\nimport {\n  BtnFilter,\n  LabelBox,\n  Text,\n} from 'components/Recommended/RecommendedDashboard/FilterBlock/FilterBlock.styled';\nimport { Form, Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { saveFinish, saveStart } from '../../../../redux/books/booksOperations';\nimport { useState } from 'react';\nimport { useBooks } from '../../../../hooks/useBooks';\nimport { PopUp } from 'components/PopUp/PopUp';\nimport { EndReading } from 'components/PopUp/Notifications/EndReading';\nimport toast from 'react-hot-toast';\nimport * as Yup from 'yup';\n\nexport const AddReading = () => {\n  const [isReading, setIsReading] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const dispatch = useDispatch();\n  const { readBook } = useBooks();\n  const id = readBook._id;\n\n  const pageSchema = Yup.object({\n    page: Yup.number()\n      .positive()\n      .integer()\n      .truncate()\n      .required('This is a required field'),\n  });\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    document.body.style.overflow = '';\n  };\n\n  const handleStart = ({ page }, { resetForm }) => {\n    if (!isReading) {\n      dispatch(saveStart({ id, page }));\n      toast.success('The reading has begun...');\n      if (readBook.totalPages === parseInt(page)) {\n        toast.success('You`ve read to the end.');\n      }\n      setIsReading(!isReading);\n    } else if (isReading) {\n      dispatch(saveFinish({ id, page }));\n      toast.success('The reading is complete...');\n      if (readBook.totalPages === parseInt(page)) {\n        setIsModalOpen(true);\n        document.body.style.overflow = 'hidden';\n      }\n      setIsReading(!isReading);\n    }\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ page: '' }}\n      validationSchema={pageSchema}\n      onSubmit={handleStart}\n    >\n      <Form>\n        <Text>{`${isReading ? 'Stop' : 'Start'} page:`}</Text>\n        <LabelBox>\n          <Label htmlFor=\"page\">Page number:</Label>\n          <StyledInput type=\"number\" name=\"page\" id=\"page\" />\n          <ErrMsg name=\"page\" component=\"div\" />\n        </LabelBox>\n        <BtnFilter type=\"submit\">\n          <span>{`To ${isReading ? 'Stop' : 'Start'}`}</span>\n        </BtnFilter>\n        {isModalOpen && (\n          <PopUp isOpen={isModalOpen} onRequestClose={closeModal}>\n            <EndReading onRequestClose={closeModal} />\n          </PopUp>\n        )}\n      </Form>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\nimport { theme } from '../../../../styleset/theme';\n\nexport const Progress = styled.div`\n  @media screen and (max-width: 767px) {\n    margin-block-start: ${theme.spacing(20)};\n  }\n  max-width: 320px;\n  h3 {\n    margin-block-end: ${theme.spacing(7)};\n    font-size: 20px;\n    font-weight: 700;\n    line-height: 1;\n  }\n\n  p {\n    margin-block-end: ${theme.spacing(10)};\n    color: ${theme.colors.lightgrey};\n    font-size: 14px;\n    font-weight: 500;\n    line-height: 1.285;\n  }\n\n  img {\n    margin: 0 auto;\n    padding: ${theme.spacing(12)};\n    border-radius: ${theme.radii.xxl};\n    background-color: ${theme.colors.secondary};\n    inline-size: 80px;\n    block-size: 80px;\n  }\n`;\n","import { Progress } from \"./ProgressBlock.styled\";\nimport star from '../../../../images/star.png';\n\nexport const ProgressBlock = () => {\n  return (\n    <Progress>\n      <h3>Progress</h3>\n      <p>\n        Here you will see when and how much you have read. To make an entry,\n        enter the start page number at the top and click on the 'To start'\n        button .\n      </p>\n      <img src={star} alt=\"star\" />\n    </Progress>\n  );\n};\n","import styled from 'styled-components';\nimport { theme } from '../../../../../styleset/theme';\n\nexport const FlexWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  h3 {\n    font-size: 18px;\n    font-weight: 700;\n    line-height: 1;\n    @media screen and (min-width: 768px) {\n      font-size: 20px;\n    }\n  }\n`;\n\nexport const BtnBox = styled.div`\n  display: flex;\n  gap: ${theme.spacing(4)};\n`;\n\nexport const BtnDetails = styled.button`\n  inline-size: 16px;\n  block-size: 16px;\n  background-color: transparent;\n  border: none;\n\n  @media screen and (min-width: 768px) {\n    inline-size: 20px;\n    block-size: 20px;\n  }\n\n  svg {\n    inline-size: 16px;\n    block-size: 16px;\n    @media screen and (min-width: 768px) {\n      inline-size: 20px;\n      block-size: 20px;\n    }\n  }\n\n  svg:is(:hover, :focus, :active) {\n    stroke: ${theme.colors.light};\n  }\n`;\n\nexport const DiaryBody = styled.div`\n  position: relative;\n  margin-block-start: ${theme.spacing(10)};\n  padding: ${theme.spacing(8)};\n  max-block-size: 211px;\n  overflow-y: auto;\n  background-color: ${theme.colors.secondary};\n  border-radius: ${theme.radii.m};\n  @media screen and (min-width: 768px) {\n    margin-block-start: ${theme.spacing(8)};\n    max-block-size: 252px;\n  }\n  @media screen and (min-width: 1440px) {\n    padding: ${theme.spacing(10)};\n    max-block-size: none;\n  }\n\n  ul {\n    display: flex;\n    flex-direction: column;\n    gap: ${theme.spacing(8.5)};\n    @media screen and (min-width: 768px) {\n      gap: ${theme.spacing(7)};\n    }\n    @media screen and (min-width: 1440px) {\n      gap: ${theme.spacing(11)};\n    }\n  }\n\n  ul li {\n    display: flex;\n    justify-content: space-between;\n  }\n`;\n\nexport const VerticalLine = styled.div`\n  position: absolute;\n  width: 2px;\n  height: 298px;\n  left: 23px;\n  right: 270px;\n  top: 21px;\n  bottom: -102px;\n  background: ${theme.colors.primary};\n\n  @media screen and (min-width: 768px) {\n    height: 328px;\n    left: 25px;\n    right: 295px;\n    bottom: -61px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    left: 29px;\n  }\n`;\n","import styled from 'styled-components';\nimport { theme } from '../../../../../../styleset/theme';\n\nexport const LeftSide = styled.div`\n  z-index: 1;\n  display: flex;\n  gap: ${theme.spacing(5)};\n\n  svg {\n    inline-size: 16px;\n    block-size: 16px;\n    @media screen and (min-width: 768px) {\n      inline-size: 20px;\n      block-size: 20px;\n    }\n  }\n\n  div h4 {\n    margin-block-end: ${theme.spacing(8.5)};\n    font-size: 12px;\n    font-weight: 700;\n    line-height: 1.333;\n    @media screen and (min-width: 768px) {\n      font-size: 16px;\n      line-height: 1.285;\n    }\n  }\n\n  div h5 {\n    margin-block-end: ${theme.spacing(2)};\n    font-size: 14px;\n    font-weight: 500;\n    line-height: 1.285;\n    @media screen and (min-width: 768px) {\n      font-size: 20px;\n      line-height: 1;\n    }\n  }\n\n  div h6 {\n    margin-block-end: ${theme.spacing(2)};\n    color: ${theme.colors.lightgrey};\n    font-size: 10px;\n    font-weight: 500;\n    line-height: 1.2;\n    @media screen and (min-width: 768px) {\n      font-size: 12px;\n      line-height: 1.166;\n    }\n  }\n`;\n\nexport const RightSide = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${theme.spacing(3)};\n  @media screen and (min-width: 768px) {\n    gap: ${theme.spacing(4)};\n  }\n\n  div h4 {\n    margin-block-end: ${theme.spacing(8)};\n    color: ${theme.colors.lightgrey};\n    font-size: 12px;\n    font-weight: 500;\n    line-height: 1.333;\n    @media screen and (min-width: 768px) {\n      font-size: 14px;\n      line-height: 1.285;\n    }\n  }\n\n  div svg {\n    margin-block-end: ${theme.spacing(3.5)};\n    inline-size: 43px;\n    block-size: 18px;\n    @media screen and (min-width: 768px) {\n      inline-size: 59px;\n      block-size: 24px;\n    }\n  }\n\n  div h5 {\n    max-inline-size: 43px;\n    color: ${theme.colors.lightgrey};\n    font-size: 10px;\n    font-weight: 500;\n    line-height: 1.2;\n    @media screen and (min-width: 768px) {\n      max-inline-size: 59px;\n      font-size: 12px;\n      line-height: 1.166;\n    }\n  }\n`;\n\nexport const BtnDel = styled.button`\n  inline-size: 14px;\n  block-size: 14px;\n  background: transparent;\n  border: none;\n\n  svg {\n    inline-size: 14px;\n    block-size: 14px;\n    stroke: ${theme.colors.lightgrey};\n    fill: transparent;\n    transition: stroke ${theme.transition};\n  }\n\n  svg:is(:hover, :focus, :active) {\n    stroke: ${theme.colors.accent};\n  }\n`;\n","import { BtnDel, LeftSide, RightSide } from './DiaryItem.styled';\nimport { removeReading } from '../../../../../../redux/books/booksOperations';\nimport { useDispatch } from 'react-redux';\nimport SpriteIcons from '../../../../../../images/sprite.svg';\nimport { useBooks } from '../../../../../../hooks/useBooks';\n\nexport const DiaryItem = ({ info }) => {\n  const dispatch = useDispatch();\n  const {readBook} = useBooks();\n\n  const { startReading, finishReading, startPage, finishPage, speed, _id } = info;\n  const { totalPages, timeLeftToRead } = readBook;\n\n  const convertDate = timeData => {\n    const date = new Date(timeData);\n    const D = date.getDate();\n    const M = (date.getMonth() + 1).toString().padStart(2, '0');\n    const Y = date.getFullYear();\n    return `${D}.${M}.${Y}`;\n  };\n\n  const startDate = startReading;\n  const finishDate = finishReading;\n  const startConvertDate = convertDate(startDate);\n  const finishConvertDate = convertDate(finishDate);\n  const percentage = ((finishPage / totalPages) * 100).toFixed(2);\n  const page = finishPage - startPage;\n  const bookId = readBook._id;\n\n  const deleteProgressPoint = _id => {\n    dispatch(removeReading({ bookId, readingId:_id }));\n  };\n\n  return (\n    <>\n      <LeftSide>\n        <svg>\n          <use xlinkHref={`${SpriteIcons}#icon-diary-dot`} />\n        </svg>\n        <div>\n          <h4>{finishConvertDate ? finishConvertDate : startConvertDate}</h4>\n          <h5>{percentage} %</h5>\n          <h6>{timeLeftToRead.minutes} minutes</h6>\n        </div>\n      </LeftSide>\n      <RightSide>\n        <div>\n          <h4>{page} pages</h4>\n          <svg>\n            <use xlinkHref={`${SpriteIcons}#icon-diagram`} />\n          </svg>\n          <h5>{speed} pages per hour</h5>\n        </div>\n        <BtnDel onClick={() => deleteProgressPoint(_id)}>\n          <svg>\n            <use xlinkHref={`${SpriteIcons}#icon-trash`} />\n          </svg>\n        </BtnDel>\n      </RightSide>\n    </>\n  );\n};\n","import {\n  DiaryBody,\n  VerticalLine,\n} from './DiaryBlock.styled';\nimport { DiaryItem } from './DiaryItem/DiaryItem';\nimport { useBooks } from '../../../../../hooks/useBooks';\n\nexport const DiaryBlock = () => {\n  const {readBook}= useBooks();\n\n  return (\n    <>\n      {readBook.timeLeftToRead && (\n        <DiaryBody>\n          <VerticalLine />\n          <ul>\n            {readBook.progress\n              .slice()\n              .reverse()\n              .map(item => (\n                <li key={item._id}>\n                  <DiaryItem info={item} />\n                </li>\n              ))}\n          </ul>\n        </DiaryBody>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { theme } from '../../../../../styleset/theme';\n\nexport const Quotation = styled.p`\n  @media screen and (max-width: 1439px) {\n    display: none;\n  }\n  margin-block-start: ${theme.spacing(10)};\n  max-inline-size: 293px;\n  color: ${theme.colors.lightgrey};\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.285;\n`;\n\nexport const StatisticsBody = styled.div`\n  position: relative;\n  margin-block-start: ${theme.spacing(10)};\n  padding: ${theme.spacing(10)};\n  background-color: ${theme.colors.secondary};\n  border-radius: ${theme.radii.m};\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    margin-block-start: ${theme.spacing(8)};\n    padding: ${theme.spacing(14)};\n  }\n  @media screen and (min-width: 1440px) {\n    padding: ${theme.spacing(10)};\n  }\n\n  img {\n    margin-block-end: ${theme.spacing(10.5)};\n    inline-size: 116px;\n    block-size: 116px;\n    @media screen and (min-width: 768px) {\n      margin-block-end: ${theme.spacing(8)};\n      inline-size: 138px;\n      block-size: 138px;\n    }\n    @media screen and (min-width: 1440px) {\n      margin-block-end: ${theme.spacing(10)};\n      inline-size: 168px;\n      block-size: 168px;\n    }\n  }\n\n  span {\n    position: absolute;\n    top: 69px;\n    font-size: 18px;\n    font-weight: 700;\n    line-height: 1.111;\n    @media screen and (min-width: 768px) {\n      top: 87px;\n      font-size: 20px;\n      line-height: 1;\n    }\n    @media screen and (min-width: 1440px) {\n      top: 95px;\n    }\n  }\n\n  h4 {\n    margin-block-end: ${theme.spacing(2)};\n    font-size: 14px;\n    font-weight: 500;\n    line-height: 1.285;\n    @media screen and (min-width: 768px) {\n      margin-block-end: ${theme.spacing(4)};\n      font-size: 20px;\n      line-height: 1;\n    }\n  }\n\n  h5 {\n    color: ${theme.colors.lightgrey};\n    font-size: 10px;\n    font-weight: 500;\n    line-height: 1.2;\n    @media screen and (min-width: 768px) {\n      font-size: 12px;\n      line-height: 1.166;\n    }\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: ${theme.spacing(7.5)};\n`;\n\nexport const ProgressClr = styled.div`\n  inline-size: 14px;\n  block-size: 14px;\n  border-radius: 4px;\n  background-color: ${theme.colors.progress};\n`;\n","import {\n  ProgressClr,\n  Quotation,\n  StatisticsBody,\n  Wrapper,\n} from './StatisticsBlock.styled';\nimport ring from '../../../../../images/progress-ring.png';\n\nexport const StatisticsBlock = () => {\n\n  return (\n    <>\n      <Quotation>\n        Each page, each chapter is a new round of knowledge, a new step towards\n        understanding. By rewriting statistics, we create our own reading\n        history.\n      </Quotation>\n      <StatisticsBody>\n        <img src={ring} alt=\"progress\" />\n        <span>100%</span>\n        <Wrapper>\n          <ProgressClr />\n          <div>\n            <h4>100 %</h4>\n            <h5>50 pages read</h5>\n          </div>\n        </Wrapper>\n      </StatisticsBody>\n    </>\n  );\n};\n","import { DiaryBlock } from './DiaryBlock/DiaryBlock';\nimport { StatisticsBlock } from './StatisticsBlock/StatisticsBlock';\nimport {\n  BtnBox,\n  BtnDetails,\n  FlexWrapper,\n} from './DiaryBlock/DiaryBlock.styled';\nimport SpriteIcons from '../../../../images/sprite.svg';\nimport { useState } from 'react';\n\nexport const Details = () => {\n  const [show, setShow] = useState(false);\n\n  const diaryClick = () => {\n    setShow(true);\n  };\n\n  const detailsClick = () => {\n    setShow(false);\n  };\n\n  return (\n    <>\n      <FlexWrapper>\n        <h3>{show ? 'Diary' : 'Statistics'}</h3>\n        <BtnBox>\n          <BtnDetails onClick={diaryClick}>\n            <svg stroke={show ? '#F9F9F9' : '#686868'}>\n              <use xlinkHref={`${SpriteIcons}#icon-hourglass`} />\n            </svg>\n          </BtnDetails>\n          <BtnDetails onClick={detailsClick}>\n            <svg stroke={!show ? '#F9F9F9' : '#686868'}>\n              <use xlinkHref={`${SpriteIcons}#icon-pie-chart`} />\n            </svg>\n          </BtnDetails>\n        </BtnBox>\n      </FlexWrapper>\n      {show ? <DiaryBlock /> : <StatisticsBlock />}\n    </>\n  );\n};\n","import { Dashboard } from 'components/Constructor/Dashboard/Dashboard';\nimport { AddReading } from './AddReading/AddReading';\nimport { ProgressBlock } from './ProgressBlock/ProgressBlock';\nimport { Details } from './Details/Details';\nimport { useBooks } from '../../../hooks/useBooks';\n\nexport const ReadingDashboard = () => {\n  const { newBook } = useBooks();\n\n  return (\n    <Dashboard>\n      <AddReading />\n      {newBook.status === 'unread' ? <ProgressBlock /> : <Details />}\n    </Dashboard>\n  );\n};\n","import styled from 'styled-components';\nimport { theme } from '../../../styleset/theme';\n\nexport const ImageBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  align-items: center;\n  img {\n    margin-block-end: ${theme.spacing(5)};\n    border-radius: ${theme.radii.s};\n    inline-size: 137px;\n    block-size: 208px;\n    @media screen and (min-width: 768px) {\n      margin-block-end: ${theme.spacing(12.5)};\n      border-radius: ${theme.radii.s};\n      inline-size: 169px;\n      block-size: 256px;\n    }\n    @media screen and (min-width: 1440px) {\n      inline-size: 224px;\n      block-size: 340px;\n    }\n  }\n\n  h4 {\n    margin-block-end: ${theme.spacing(2.5)};\n    max-inline-size: 146px;\n    font-size: 14px;\n    font-weight: 700;\n    line-height: 1.285;\n    @media screen and (min-width: 768px) {\n      margin-block-end: ${theme.spacing(2)};\n      max-inline-size: 320px;\n      font-size: 20px;\n      line-height: 1;\n    }\n  }\n\n  h5 {\n    margin-block-end: ${theme.spacing(10)};\n    color: ${theme.colors.lightgrey};\n    font-size: 10px;\n    font-weight: 500;\n    line-height: 1.2;\n    @media screen and (min-width: 768px) {\n      margin-block-end: ${theme.spacing(8)};\n      font-size: 14px;\n      line-height: 1.285;\n    }\n    @media screen and (min-width: 768px) {\n      margin-block-end: ${theme.spacing(12.5)};\n    }\n  }\n`;\n\nexport const InfoBlock = styled.div`\n  position: absolute;\n  top: 560px;\n  @media screen and (min-width: 768px) {\n    top: 450px;\n  }\n  @media screen and (min-width: 1440px) {\n    top: 200px;\n  }\n  span {\n    color: ${theme.colors.light};\n  }\n\n  h5 {\n    color: ${theme.colors.lightgrey};\n  }\n`;\n\nexport const BtnStartStop = styled.button`\n  inline-size: 40px;\n  block-size: 40px;\n  border: none;\n  background: transparent;\n  border-radius: ${theme.radii.xxl};\n  transition: 1s;\n\n  &:is(:hover, :focus) {\n    scale: 1.1;\n  }\n\n  @media screen and (min-width: 768px) {\n    inline-size: 50px;\n    block-size: 50px;\n  }\n  svg {\n    inline-size: 40px;\n    block-size: 40px;\n    transition: 1s;\n    @media screen and (min-width: 768px) {\n      inline-size: 50px;\n      block-size: 50px;\n    }\n  }\n  svg:is(:hover, :focus) {\n    scale: 1.1;\n  }\n`;\n","import { Mainboard } from 'components/Constructor/Mainboard/Mainboard';\nimport { BtnStartStop, ImageBox, InfoBlock } from './ReadingMainboard.styled';\nimport { useState } from 'react';\nimport { useBooks } from '../../../hooks/useBooks';\nimport SpriteIcons from '../../../images/sprite.svg';\nimport noImg from '../../../images/no-image.png';\n\nexport const ReadingMainboard = () => {\n  const [show, setShow] = useState(false);\n  const { readBook } = useBooks();\n  const { imageUrl, title, author, timeLeftToRead, status } = readBook;\n\n  const toggleTime = () => {\n    return timeLeftToRead.hours !== 'undefined' ? setShow(!show) : null;\n  };\n\n  return (\n    <Mainboard>\n      <h3>My reading</h3>\n      {show && (\n        <InfoBlock>\n          <p>Time Left:</p>\n          <h5>\n            <span>{timeLeftToRead.hours}</span> hours\n          </h5>\n          <h5>\n            <span>{timeLeftToRead.minutes}</span> minutes\n          </h5>\n          <h5>\n            <span>{timeLeftToRead.seconds}</span> seconds\n          </h5>\n        </InfoBlock>\n      )}\n      <ImageBox>\n        <img src={imageUrl ? imageUrl : noImg} alt=\"book\" />\n        <div>\n          <div>\n            <h4>{title}</h4>\n            <h5>{author}</h5>\n          </div>\n          <BtnStartStop onClick={toggleTime}>\n            {!timeLeftToRead && status !== 'unread' ? (\n              <svg>\n                <use xlinkHref={`${SpriteIcons}#icon-stop`} />\n              </svg>\n            ) : (\n              <svg>\n                <use xlinkHref={`${SpriteIcons}#icon-start`} />\n              </svg>\n            )}\n          </BtnStartStop>\n        </div>\n      </ImageBox>\n    </Mainboard>\n  );\n};\n","import { Container } from 'components/Constructor/Container/Container';\nimport { ReadingDashboard } from './ReadingDashboard/ReadingDashboard';\nimport { ReadingMainboard } from './ReadingMainboard/ReadingMainboard';\n\nexport const Reading = () => {\n  return (\n    <Container>\n      <ReadingDashboard />\n      <ReadingMainboard />\n    </Container>\n  );\n};\n","import { Reading } from '../components/Reading/Reading';\n\nexport default function ReadingPage() {\n  return <Reading />\n}\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","theme","Container","_ref","children","_jsx","Section","Dashboard","Mainboard","ModalBody","ModalHeader","CloseBtn","_templateObject2","customStyles","content","top","left","right","bottom","marginRight","transform","border","borderRadius","zIndex","overflowY","scrollbarColor","scrollbarWidth","backgroundColor","overlay","Modal","modalRoot","document","querySelector","PopUp","isOpen","onRequestClose","createPortal","_jsxs","style","onClick","width","height","xlinkHref","concat","SpriteIcons","Text","LabelBox","StyledInput","Field","_templateObject3","BtnWrapper","_templateObject4","BtnFilter","_templateObject5","selectBooks","state","books","selectTotalPage","totalPages","selectNewBooks","newBooks","selectReadBook","readBook","selectOwnBook","ownBook","useBooks","useSelector","totalPage","newBook","EndReading","src","alt","AddReading","_useState","useState","_useState2","_slicedToArray","isReading","setIsReading","_useState3","_useState4","isModalOpen","setIsModalOpen","dispatch","useDispatch","id","_id","pageSchema","Yup","page","positive","integer","truncate","required","closeModal","body","overflow","Formik","initialValues","validationSchema","onSubmit","_ref2","resetForm","saveFinish","toast","parseInt","saveStart","Form","Label","htmlFor","type","name","ErrMsg","component","Progress","ProgressBlock","FlexWrapper","BtnBox","BtnDetails","DiaryBody","VerticalLine","LeftSide","RightSide","BtnDel","DiaryItem","info","startReading","finishReading","startPage","finishPage","speed","timeLeftToRead","convertDate","timeData","date","Date","D","getDate","M","getMonth","toString","padStart","Y","getFullYear","finishDate","startConvertDate","finishConvertDate","percentage","toFixed","bookId","_Fragment","minutes","removeReading","readingId","deleteProgressPoint","DiaryBlock","progress","slice","reverse","map","item","Quotation","StatisticsBody","ProgressClr","StatisticsBlock","Details","show","setShow","stroke","ReadingDashboard","status","ImageBox","InfoBlock","BtnStartStop","ReadingMainboard","imageUrl","title","author","hours","seconds","noImg","Reading","ReadingPage"],"sourceRoot":""}