{"version":3,"file":"static/js/98.20a7e159.chunk.js","mappings":"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","sources":["components/AuthForms/LoginForm/LoginForm.styled.jsx","components/AuthForms/LoginForm/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from '../../../styleset/theme';\n\nexport const BtnLogin = styled.button`\n  margin-block-start: ${theme.spacing(32)};\n  margin-inline-end: ${theme.spacing(7)};\n  padding: ${theme.spacing(6)} ${theme.spacing(22.5)};\n\n  border: 1px solid transparent;\n  border-radius: ${theme.radii.xl};\n  background-color: ${theme.colors.light};\n  transition: background-color ${theme.transition}, border ${theme.transition};\n\n  &:is(:hover, :focus) {\n    background-color: transparent;\n    border: 1px solid ${theme.colors.brd};\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-block-start: ${theme.spacing(66)};\n    margin-inline-end: ${theme.spacing(10)};\n    padding: ${theme.spacing(8)} ${theme.spacing(27)};\n    span {\n      font-size: 20px;\n      line-height: 1;\n    }\n  }\n\n  span {\n    color: ${theme.colors.primary};\n    font-size: 14px;\n    font-weight: 700;\n    line-height: 1.333;\n    transition: color ${theme.transition};\n  }\n\n  &:is(:hover, :focus) span {\n    color: ${theme.colors.light};\n  }\n`;\n","import SpriteIcons from '../../../images/sprite.svg';\nimport toast from 'react-hot-toast';\nimport auth from '../../../images/auth.png';\nimport logo from '../../../images/logo.png';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useState } from 'react';\nimport { BtnLogin } from './LoginForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from '../../../redux/auth/authOperations';\nimport {\n  AuthLink,\n  Container,\n  ErrMsg,\n  EyeBtn,\n  HeroImg,\n  Label,\n  LabelBox,\n  Logo,\n  LogoBox,\n  StyledForm,\n  StyledInput,\n  Title,\n} from '../RegisterForm/RegisterForm.styled';\n\nexport const LoginForm = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const dispatch = useDispatch();\n\n  const loginSchema = Yup.object({\n    email: Yup.string()\n      .email('Invalid email address')\n      .matches(/^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/, 'Wrong email. Try again...')\n      .trim()\n      .required('This is a required field'),\n    password: Yup.string()\n      .min(7, 'At least 7 simbols')\n      .max(20, 'At most 20 simbols')\n      .trim()\n      .required('This is a required field'),\n  });\n\n  const handleSubmit = async (values, { resetForm }) => {\n    try {\n      await dispatch(logIn(values)).unwrap();\n      toast.success('Welcome back!');\n      resetForm();\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const handleTogglePassword = () => {\n    setShowPassword(prevState => !prevState);\n  };\n\n  return (\n    <Container>\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        validationSchema={loginSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ errors, touched }) => (\n          <StyledForm>\n            <LogoBox>\n              <Logo src={logo} />\n              <span>read journey</span>\n            </LogoBox>\n            <Title>\n              Expand your mind, reading <span>a book</span>\n            </Title>\n\n            <LabelBox>\n              <Label htmlFor=\"email\">Mail:</Label>\n              <StyledInput\n                type=\"email\"\n                name=\"email\"\n                id=\"email\"\n                className={`special ${\n                  errors.email && touched.email ? 'error' : ''\n                } ${touched.email && !errors.email ? 'success' : ''}`}\n              />\n              <ErrMsg name=\"email\" component=\"div\" />\n            </LabelBox>\n            <LabelBox>\n              <Label htmlFor=\"password\">Password:</Label>\n              <StyledInput\n                type={showPassword ? 'text' : 'password'}\n                name=\"password\"\n                id=\"password\"\n                className={`special ${\n                  touched.password && errors.password ? 'error' : ''\n                } ${touched.password && !errors.password ? 'success' : ''}`}\n              />\n              <EyeBtn onClick={() => handleTogglePassword()} type=\"button\">\n                {touched.password && errors.password ? (\n                  <svg width=\"20\" height=\"20\">\n                    <use xlinkHref={`${SpriteIcons}#icon-error`} />\n                  </svg>\n                ) : touched.password && !errors.password ? (\n                  <svg width=\"20\" height=\"20\">\n                    <use xlinkHref={`${SpriteIcons}#icon-check`} />\n                  </svg>\n                ) : (\n                  <svg width=\"18\" height=\"18\">\n                    <use\n                      xlinkHref={\n                        showPassword\n                          ? `${SpriteIcons}#icon-eye`\n                          : `${SpriteIcons}#icon-eye-off`\n                      }\n                    />\n                  </svg>\n                )}\n              </EyeBtn>\n              <ErrMsg name=\"password\" component=\"p\" />\n            </LabelBox>\n            <BtnLogin type=\"submit\">\n              <span>Log In</span>\n            </BtnLogin>\n            <AuthLink to=\"/register\">Don`t have an account?</AuthLink>\n          </StyledForm>\n        )}\n      </Formik>\n      <HeroImg src={auth} alt=\"phone\" />\n    </Container>\n  );\n};\n","import { LoginForm } from 'components/AuthForms/LoginForm/LoginForm';\n\nexport default function LoginPage() {\n  return <LoginForm />;\n}\n"],"names":["BtnLogin","styled","_templateObject","_taggedTemplateLiteral","theme","LoginForm","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","dispatch","useDispatch","loginSchema","Yup","email","matches","trim","required","password","min","max","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","values","_ref","resetForm","_context","prev","next","logIn","unwrap","toast","t0","console","log","message","stop","_x","_x2","apply","arguments","_jsxs","Container","children","_jsx","Formik","initialValues","validationSchema","onSubmit","_ref3","errors","touched","StyledForm","LogoBox","Logo","src","logo","Title","LabelBox","Label","htmlFor","StyledInput","type","name","id","className","concat","ErrMsg","component","EyeBtn","onClick","prevState","width","height","xlinkHref","SpriteIcons","AuthLink","to","HeroImg","auth","alt","LoginPage"],"sourceRoot":""}